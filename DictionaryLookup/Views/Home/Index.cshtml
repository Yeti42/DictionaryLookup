@model IEnumerable<DictionaryLookup.Models.NGramViewModel>

@{
    ViewBag.Title = "Dictionary Search";
}

<h2>Dictionary Search</h2>

@{
    List<SelectListItem> listLanguageItems = new List<SelectListItem>();
    listLanguageItems.Add(new SelectListItem
    {
        Text = "English(United States)",
        Value = "1"
    });
}
@{
    List<SelectListItem> listDictionaryItems = new List<SelectListItem>();
    listDictionaryItems.Add(new SelectListItem
    {
        Text = "RS_Release",
        Value = "1"
    });
}

@using (Html.BeginForm())
{
    <table>
        <tr>
            <th>
                Language:
            </th>
            <td>
                @Html.DropDownList("languageSelection", listLanguageItems, new { @class = "form-control" })
            </td>
        </tr>
        <tr>
            <th>
                Dictionary:
            </th>
            <td>
                @Html.DropDownList("dictionarySelection", listDictionaryItems, new { @class = "form-control" })
            </td>
        </tr>
        <tr>
            <th>
                Word:
            </th>
            <td>
                @Html.TextBox("word")
            </td>
        </tr>
        <tr>
            <th>
                Prefix:
            </th>
            <td>
                @Html.TextBox("prefix")
            </td>
            <td>
                <input type="submit" value="Search" />
            </td>
        </tr>
    </table>
}

<br />

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.NGramWordString)
        </th>
        <th>
            TP cost
        </th>
        <th>
            Offensive term
        </th>
        <th>
            Report As
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.ActionLink(item.NGramWordString, "Details", new { id = item.DictionaryNGramID })
            </td>
            <td>
                @{
                    double p = (item.Tags.TextPredictionCost == 255) ?
                            Math.Pow(10.0, -10.0) : Math.Pow(10.0, -8.0 * ((double)(item.Tags.TextPredictionCost) / 254.0));
                    string v = p.ToString("e3");
                }
                @Html.DisplayFor(modelItem => item.Tags.TextPredictionCost)
                @(" (" + v + ")")
            </td>
            <td>
                @(item.Tags.TextPredictionBadWord?"Yes":"")
            </td>
            <td>
                @Html.ActionLink("Misspelling", "ReportError", new { ngramid = item.DictionaryNGramID, errorid = 1 }) |
                @Html.ActionLink("Invalid", "ReportError", new { ngramid = item.DictionaryNGramID, errorid = 2 }) |
                @(item.Tags.TextPredictionBadWord ? @Html.ActionLink("Not Offensive", "ReportError", new { wordid = item.DictionaryNGramID, errorid = 3 }) : @Html.ActionLink("Offensive", "ReportError", new { wordid = item.DictionaryNGramID, errorid = 2 }))
            </td>
        </tr>
    }

</table>
